2024/8/19
之前：完成打大体结构....

2024/9/9
完成了FishingIndicatorUICtrl脚本的重构，分成了四个脚本，完成自动获取脚本功能

2024/9/10
对IndicatorMovingRangeHolder的UI部分进行了玩法完善，将其融入到整个钓鱼的过程的状态机中，实现了钓鱼全流程完善。
对背包系统有了大致的想法

2024/9/11
对背包系统有了一个分条渲染的方法（无限背包），做了一个通过路径寻找Prefab的方法，简单的写了一下inventory，SlotHolder，Slot脚本。

2024/9/12
在背包系统中写了一个InitSlot，写了一个通过名字寻找父GameObject节点的静态类和相关静态方法，然后改进了对象池生成GameObject的时候将所有的GameObject的位置全部调整到pool对象下。最后发现UI不能和普通的GameObject一概而论，然后全部打算重构

2024/9/13（休息了）
休息了

2024/9/14
今天重写了InventoryManager，SlotHolder，Slot中的逻辑，改成了先将List初始化好，然后在其添加null，有数据填入的时候可以将对应的Slot中的数据进行更改，同时也对UI的逻辑进行了完善，基本完成了对背包中的数据进行添加和删除，初步了解了鼠标点击事件和拖拽事件（EventSystem中的接口），初步写了一部分拖拽逻辑

2024/9/15
修复了因为开始游戏的时候默认不打开背包，再次打开背包就会报错的bug，给Inventory添加了新的逻辑，并可以通过按键加以控制，给DragItem添加了相应的逻辑，但是没有交换数据的部分

2024/9/16
完成了背包UI拖拽的功能，利用了射线检测筛选出要交换的格子，写出了交换数据的方法

2024/9/17
给FishType添加了生成时间的功能，然后写出了悬浮板的功能，能让鼠标悬浮在UI上显示对应的信息，并且跟随鼠标移动

2024/9/18
做了一个决定，先把有限背包做好，然后再做无限背包，结果最后还是放弃了，实在做不出来

2024/9/19
新的地形贴图拿到手，也是放到了Sence窗口中，拼装好了。创建出了一个Player，移动模式采用了命令模式，实现了左右移动，跳跃采用射线检测判断gameObject是否触地。还有一个bug就是如果在移动的过程中一直按着跳跃键，速度不会减少。摩擦力还有点小。明天更改

2024/9/20
更改昨天的提的bug暂时先不改了，继续向下做了，开发了，拿鱼竿，收鱼竿的方法，然后成功的将鱼漂飞出的功能写出来了，目前只能向右横着飞，然后将拿鱼竿收鱼竿，抛竿的方法重构做成了命令模式，然后用钓鱼控制器来控制，然后将Player移动的控制器整合到了一个总控制器中

2024/9/21
写了一个画线的功能类，绑定在了鱼竿上，通过钓鱼控制器进行控制，重新摆放了场景，使其有更好的条理性

2024/9/22
修复了飞出的鱼漂会随着玩家转身而更改位置的bug，通过更改鱼漂的父级对象即可解决，明确了控制钓鱼的控制器应该和状态机的状态相接，需要再创建一个类绑定到
GameRoot上，然后监控钓鱼和状态机的状态。

2024/9/23
将抛竿和收杆效果终于实现了，但是bug和效果也不太好，打算明天再看看

2024/9/24
发现问题所在了，应该遵循每个类的单一性职责原则，将FishandCastController中的命令执行判断逻辑移动到了
FishState中，重构了钓鱼状态机，为其增加了进入方法和退出方法，完美解决了抛竿和收杆快速切换就会出bug的问题

2024/9/25
更新了状态机的状态更新，将鱼漂再收回的时候可以穿过任何物体，更新了通过鼠标点击的方向进行抛竿，更改了水面的摩擦力，目前存在的bug：如果抛竿，再收回，会打乱当前状态机的状态切换，需要更改。

2024/9/26（休息了）
休息了

2024/9/27
25号提到的bug解决了，修复了如果没有钓到鱼就收杆会导致鱼漂卡地形的bug，再次尝试写鱼漂进水然后漂浮的效果。

2024/9/28
不行了，写不明白这个功能，已经放弃了，还是采用实打实的碰撞体碰撞的方法了，再次修复了抛出的鱼漂收回的时候会卡地形的bug，重构了DrawLine脚本，使其独立出钓鱼控制器，自成一个控制器，然后被总控制器控制，重构钓鱼控制器失败。回档代码用了很长时间（以后重构一定一定要备份代码！）

2024/9/29
修复了暂停movePlayerController之后还能移动玩家的bug，修改了进入CatchingFish状态之后不画线的bug，初步写出了收鱼漂的吸附功能，修改了收漂悠悠球bug，写出了正确的吸附功能，并且也是在钓鱼状态机中实现了，修复了再次钓鱼的时候鱼能瞬间上钩的等问题（钓鱼指示器的bug），将钓鱼指示器所有bug全部修复好了。

2024/9/30
因为之前写的鱼类初始化的方法中的AssetDatabase方法不能在游戏构建版中使用，所以改用了ResourceAll的方法，重构了initFishType类，重构了FishType类，使其更直观，将randomFishpickingAddWeightAndLength重构为DisplayFish，负责在钓起来鱼的时候从对象池中把鱼和将鱼重新放回对象池中。修改了钓到鱼之后背包中不能正常显示鱼的bug，但还是有bug

2024/10/1
继续修改背包系统的bug，通过在SlotContainer修改初始化Slot的形式改成由InventoryManager驱动即可修复Bug。

2024/10/2
初步完成了光照渲染的渲染管线，小学了一下，然后重构了背包打开关闭的方法，新增了InventoryContoller，用命令模式控制背包开关的方法，重新写了一个游戏内的状态机，用来控制玩家在不同操作状态下的时候能做的事情，用这个方法完成了开背包与钓鱼之间的操作关系

2024/10/3
修复了在CatchingFish的状态下能开背包的bug，修复了边向前走边快速按下两次鼠标左键导致画线器不画线的bug，修复了在操作背包的时候鼠标左键，中建，右键都能操作背包的bug。

2024/10/4
修复了在抛竿的一瞬间按切换空手导致的鱼漂飞出，鱼竿却能收起来的bug，在场景中新添加了商店贴图，提供了进入商店的方法。写了公共的通过UI支撑点，基于UI大小进行偏移的公共方法，以后就可以直接调用了。

2024/10/5
重构了FishManager为ItemManager，为ItemManager添加了PropType和ToolType，信息管理也改成了泛类。

2024/10/6
再次重构ItemManger，添加了字典管理器，通过GetDictionary方法查找不同字典。新增了工厂类，负责调用FishType，
ToolType，PropType的构造函数，重构了DisplayFish类，使其重新适应重构的新ItemManager。尝试重构InventoryManager，失败了

2024/10/7
今天再次尝试重构InventoryManager，成功了，直接参考了之前学习的3dRPG，把InventoryManager的功能分离出来给
InventoryData了，然后给每个容器分别创建了Container，然后给Slot划分了以下类别，让Slot通过类别去寻找对应的InventoryData。完美解决，因为重构了inventoryData，所以拖拽功能和DisplayFish也重构完毕了。还有悬浮板等待重构。

2024/10/8
添加了给背包内切换不同页面的功能，并且通过InventoryController控制。 重新绘制了Floating（悬浮板的界面）。通过左上角的按钮进行切换。重构悬浮板功能，通过悬浮板可以看到不同物品的介绍。这个悬浮板通过FloatingController和DisplayFoating联合控制

2024/10/9
添加了装备格的类别并且添加了装备格子进行交换的功能，然后又增添了很多的鱼竿，修改了钓鱼状态机，然后修改了装备栏位又物品的时候会刷新Player下的FishRodPoint下的鱼竿，但是发现改着改着就出问题了，这一块那一块显然不可取，所以回档了，整理了新一轮笔记，打算一步一步重新再次重构功能。

2024/10/10
着手将鱼竿独立出来失败了，回档。着手给Slot建立新的枚举来分别装备格子和普通格子结果失败了回档了一次。 然后着重从背包入手，给InventoryManager和SlotContainer添加了新的数据库和Slot控制，给Slot新添加了一个Equipment类别，然后通过EquipmentSlotContainer继承于SlotContainer之后完成了鱼竿和鱼漂的装备功能，

2024/10/11
完成了EquipmentSlotContainer的装备和卸下装备和钓鱼控制器之间联动的相关逻辑，重构了鱼竿和鱼鳔的代码，使其能独立于钓鱼控制器单独存在。重构了钓鱼状态机，多加了一个状态，就是没有完全装备鱼竿和鱼鳔的状态作为新的NoFishing状态并且在其中添加了坐标转换，使效果和之前钓鱼的时候能一摸一样，之前的NoFishing变成ReadyToFish状态。

2024/10/12
重构了原在鱼鳔中的MoveToTarget方法，现转移到钓鱼控制器中，重构了DisPlayFish方法，使其能更快的寻找到鱼漂的
transform。修复了在收竿的时候鱼漂会坐标不正确的问题。最终找到了拿出鱼竿再开背包的重大bug问题出在哪里了。

2024/10/13
修复了拿出鱼竿再开背包的重大bug，再次重构EquipmentSlotContainer给其添加了是否可以交换数据的方法，重构了DragItem类中的SwapData方法，使其拥有正常的交换数据的功能并且也通过EquipmentSlotContainer可以控制是否可以交换数据。

2024/10/14
完成了摄像机跟随脚本的完成，然后重新布置了一下场景，使其更加好看，稳定，合理，但是发现了角色或者是背包UI会发生抖动。

2024/10/15
今天尝试解决了一下player会发生抖动的问题，解决办法为将控制玩家移动的类从命令模式重构成普通的输入模式了，这样就不会因为每一帧要执行列表命令之后，才能更新摄像机的之间的更新步长不一样的问题。因为UI也是跟着屏幕摄像机更新的，所以才会抖动。 今天还完成了背景，摄像机，云彩之间的移动关系。但是还需要重构一下代码。

2024/10/16（休息了）
制作出了商店，卖出界面的UI，但是发现UI大小不太合理，又重新规划了UI的大小，下午休息了，晚上又做出了商店选项面板

2024/10/17
写了背包中的卖出界面和商店界面，还有选项面板的之间的逻辑，还写了他们出现的顺序逻辑。

2024/10/18
因为想实现的卖出格子的实现很费劲，所以换了一种形式，然后重构了dragItem中的SwapData方法，将其改成了交换的策略模式降低了耦合避免了判断逻辑的三角形地狱，然后发现在GameState选项面板状态下，会出现能打开背包的情况，在
StoreController中添加了对背包中的卖出界面的控制，可以实现对背包操作的解耦，对GameState进行了重构，增加了打开卖出界面的状态用于状态之间的解耦。

2024/10/19
重构了Store类，将其中的打开选项面板的方法移动到了StoreController中，作为命令模式的一部分写入了
TotalContrller。修复了在玩家拿着鱼竿之后在装备栏中将鱼竿卸下之后，再装备鱼竿会出现按两次拿出鱼竿键才能拿出鱼竿的bug。

2024/10/20
对卖出界面的功能进行编写，并且实现了卖出鱼的方法，能把对应的钱同步到玩家数据中。并且卖出界面扩展性也很好，直接写对应物品的钱币的计算方法就可以了。

2024/10/21
为ToolItem，PropItem添加了对应的等级枚举，然后给SaleContainer中添加了ToolItem和PropItem的卖出逻辑（虽然很简单），给商店添加了对应的Inventory数据和container控制。给商店添加了属于商店自己的mvc模式。对漂浮板显示进行了修复，使其也能够正常显示卖出界面，装备界面的物品信息

2024/10/22
完善了商店的mvc模式，使其能够正常与TotalController对接。实现了商店内的商品轮换和显示价格的方法。重新写了卖出按钮和买入按钮的方法，让方法与按钮进行绑定，然后将按钮单独做成prefab，实现了买入的方法，对漂浮板进一步进行修理bug，将其单独开一个Canvas单独显示，让其能显示任何一个slot内的icon信息。

2024/10/23
将商店刷新时间功能添加上了，发现了钓鱼指示器的重大bug，遂全部删除，准备重做

2024/10/24
休息了

2024/10/25
已经将所有的钓鱼指示器全部重置完成，准备重新融进钓鱼状态机

2024/10/25
将钓鱼指示器重新融入了钓鱼指示器，修复了无法build的问题，修复了如果进入Bitting状态的时候玩家移动的话就会一直朝最后的输入方向移动的bug

2024/10/26 -- 2024/10/29
完成了显示UI的管理器，只需要设计好显示UI就放入Prefab文件夹中就可以直接使用

2024/10/30
完成了钓鱼UI的蹦出显示，利用了DOTween插件进行显示，修改了进入商店显示案件提示和其他UI有冲突的BUG

2024/10/31
完成了音频管理器，实现了导入音频，记住音频名字的即可使用音频的功能

2024/11/1
休息了

2024/11/2
规定了鱼线长度，再次完善画线器，给钓鱼状态机修复了一些bug，给UI做出了渐进渐出的效果。

2024/11/3
将水的材质重新上新，换成了更加贴近真实水面的样子，编写了水的shader

2024/11/4
又找了几个音频，给player加上了Animation，制作了Idle和run结合的Animator

2024/11/5
将DisplayUIManager重构了一下，将TextUI显示更改成了只需要按格式添加文字代码即可，TextUI在对象池中预备的方式，调用的时候直接将UI从对象池中调出然后将文字内容改成文字config中的内容即可，然后重构了DisplayUIWithDOtween
,给其更改成了一行代码跑UI动态效果的模式，调用只需一行代码。

2024/11/6
写出了SaveAndLoad模块，写了SaveManager，存储模式暂时写好了，暂时用不了

2024/11/7
搭建了主菜单，新游戏画面

2024/11/8
废了九牛二虎之力写出了比较史的UI框架

2024/11/9
休息了

2024/11/10
修改了UI框架的bug，做出了新的加载页面，了解了一下异步加载的代码结构，写出了GameData（存档所用的代码）

2024/11/11
发现Unity自带的Utility.ToJson方法并不好用，随改成LitJson插件进行序列化，然后了解到LitJson序列化数据的时候不需要unity的序列化关键字，但是发现反序列化出了一点小问题（草！），因为LitJson反序列化的原理使用了反射，结果识别不出来继承关系的类，所以这就是一个问题。

2024/11/12
了解到LitJson无法反序列化继承关系的数据，最开始的解决方案是对LitJson动刀，结果发现难度太高，而且不利于理解，也不利于后续持续化更新，后续又了解到数据映射的概念，所以使用了数据映射，初步修改了GameData类，然后针对游戏内数据设计了Iditentfier类，然后重构了ItemData类，initType类使其初始化的时候，能再次记录一份游戏内物品的名字对应GameObject，然后通过Iditentfier类翻译出来游戏内的物品。重构了InventoryData中添加物品和删除物品的相关的方法，使其适应有关Iditentfier类的添加和删除的方法。

2024/11/13
将bug重新修改，重新创建一个类名字为Iditentifier作为游戏内物品的标识符作为游戏内的数据映射，然后将游戏游戏内的物品初始化的时候就可以使用物品表示父进行识别。然后在游戏里搭建了一个结构:
        游戏内数据 -> 标识符数据 -> 序列化 -> json文件 -> 反序列化 -> 标识符数据 -> 游戏内数据

2024/11/14
实现了对玩家的位置和数据的存储和读取，重构PlayerUI的MVC结构让其能更新玩家名字。

2024/11/15
记住了，没有任何方法能在转场景的时候能在转完场景执行Awake和Start之前完成一些操作，今天完成了一些有关Player相关的类的重构，降低了一些类和Player中绑定的类的耦合，然后有一些类在转完场景之后需要重新写转场景初始化的方法也全部重构完了。等待接下来去写转场景了

2024/11/16
重构了GameManager和SenceManager与昨天重构的初始化结构完成了转场景自动存储存档名和玩家名，自动创建存档文件的功能，完成了多存档UI的绘制（ArchivePanel）以及存档信息UI的绘制，完成了ArchivePanel与MainMenu之间的渲染关系和逻辑关系。

2024/11/17（休息了）
重构了UIManager，使其链接上PoolManager，重构了BasePanel下的子类，使其能与重构的UIManager操控UI逻辑，实现了再ArchivePanel中的显示存档信息， 

2024/11/18
完成了从MainMenu转换到GameScene场景和通过ArchivePanel进入存档的功能，完善了进入游戏，退出游戏相关的UI逻辑，文件保存和读取的逻辑，修复了卖出界面卖完之后预卖出金额不会少的bug。

2024/11/19
修复了重复进入游戏会出现出菜单的bug，构建了SettingPanel，重构了AudioManager，使其与UI框架进行联动，可以通过SettingPanel进行声音大小的操作，完善了SettingPanel的操作逻辑，使用了PlayerPrefs进行存储用户设置。让游戏启动就是玩家设置的音量设置

2024/11/20
添加了一个WaringPanel，添加上了版本号，修复了拿出竿子不抛竿能换竿的bug了，收到了很多bug报告。

2024/11/21
坐车了

2024/11/22
缓了缓，添加了一个岸边传送功能

2024/11/23
添加了ArchivePanel选中ArchiveInfoPanel的功能，添加了进入游戏，删除存档的功能，修复了“上钩了”显示UI的bug。

2024/11/24
修复了线崩了之后还能抛竿的bug。尝试修复两个状态机同时修改访问TotalController时会导致的逻辑错误

2024/11/25
成功修复了两个状态机同时修改访问TotalController时会导致的逻辑错误，修复了在读取游戏成功后如果玩家立刻钓鱼再打开背包的时候会报错的bug。修复了入过装备栏上有物品再打开一次装备栏，玩家会装备两个一摸一样的物品的bug

2024/11/26(休息了)
从今天开始，这个日志只写开发日志了

2024/11/27
添加了一个Controller的公共接口，让Controller都继承于这个接口用来控制enabled，重构TotalController, 再次完善状态机与玩家操偶做之间的逻辑，达成了进入状态机和出状态机只写相反的条件，要不就会出错。

2024/11/28
填加了卖出声效，购买生效。 构思了漂在水面漂浮的方案定为弹簧效应

2024/11/29
构思了物品属性和属性之间的联系，重构了Type类：增加了BaseType类，使其他的Type类继承他，重构了initType类，将其功能融入到了GameRoot类。然后通过Hierarchy窗口进行初始化物品的添加，做到了可视化初始化。

2024/11/30
重构了整个ItemData类以及继承他的各种Item类，使其更加能够使用多态，添加了鱼饵物品（可堆叠），让其添加到道具栏位，给背包添加了堆叠功能，因为添加了堆叠功能，相继重构了InventoryData.cs, ItemData.cs以及继承他的类，Identifier.cs, Slot.cs。

